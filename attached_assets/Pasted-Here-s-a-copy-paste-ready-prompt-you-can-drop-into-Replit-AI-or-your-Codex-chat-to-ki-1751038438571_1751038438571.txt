Here’s a **copy-paste-ready prompt** you can drop into Replit > ✏️ **AI** (or your Codex chat) to kick off the refactor.
It follows the “Instructions / Git / AGENTS.md / Citations” scaffold you supplied earlier, plus an explicit task breakdown and acceptance-criteria checklist.

---

```markdown
# Instructions
- The user will provide a task.
- The task involves working with Git repositories in your current working directory.
- Wait for all terminal commands to be completed (or terminate them) before finishing.

# Git instructions
If completing the user's task requires writing or modifying files:
- Do not create new branches (commit to **main**).
- Use `git add -A && git commit -m "<concise message>"` to save your work.
- If `pre-commit` fails, fix the issues and retry until the commit succeeds.
- Leave the worktree **clean** (`git status` shows nothing to commit) when you’re done.
- Do **NOT** amend existing commits.

# AGENTS.md spec
- Obey any AGENTS.md files you find (code conventions, run scripts, etc.).
- Run and pass all programmatic checks/hooks defined there.

# Citations instructions
- Whenever you cite code or terminal output in your final response, use  
  `【F:path/to/file.tsx†L10-L15】` or `【123abc†L4-L7】` format as described.

---

## ✨ TASK — Unify the marketing site into a single-scroll page

### Context
Current structure:
* `/pages/Index.tsx` – hero + star-field etc.  
* `/pages/Features.tsx`, `/pages/Pricing.tsx`, `/pages/Templates.tsx`, `/pages/Docs.tsx`, …  
* Navigation bar just routes React Router links.  
* Editor (`/editor`) and Auth (`/sign-in`) are separate full pages.

### Goal
1. **Merge** all marketing pages (Index, Features, Pricing, Templates, Docs, any others **except** Editor*, Sign-in / Auth*, and EditorNewProfessional) into **one** scrollable SPA section stack:
```

┌─────────────────┐
│  Hero           │  (#hero)
├─────────────────┤
│  Features       │  (#features)
├─────────────────┤
│  Pricing        │  (#pricing)
├─────────────────┤
│  Templates      │  (#templates)
├─────────────────┤
│  Docs headline  │  (#docs)
├─────────────────┤
│  Footer + Seal  │  (#footer)
└─────────────────┘

```
*Editor and Auth keep their own routes.*

2. **Navigation bar**
* Uses smooth-scroll (`scroll-behavior: smooth` or JS) to in-page anchors.
* Highlights the current section (IntersectionObserver → add `data-active`, or use `react-scrollspy`).
* Shows active colour *and underline bar* exactly like now.
* On `/editor` or `/sign-in`, highlight nothing (or “Editor”).

3. **Routing**
* Routes that used to point to `<Features />` etc. should now navigate to
  `/#features`, `/#pricing`, … (React Router + `useNavigate` or `<Navigate />`).
* Fallback `*` route → `/#hero`.

4. **Content integrity**
* Copy/paste each section’s JSX into new `Index.tsx` **without loss** (cards, grids, seal component, etc.).
* Keep the **metallic “Designed by Petar Nikolić” seal** at the end of the unified scroll.

5. **Mobile & edge cases**
* Test on ≤ 360 px width:
  * Headline wraps nicely, no overflow.
  * CTA buttons readable & tappable (≥ 44 px height).
  * Sections stack with proper padding.
* Hero 3-D canvas (`HeroFX`) continues to fade/clip correctly on scroll.
* Star grid background still fills viewport.
* No unexpected scroll-snap or jitter.

6. **Performance**
* Remove now-unused individual page components or turn them into thin shell routes that `navigate("#anchor")`.
* Lazy-load heavy assets (3-D, images) only once.

7. **Acceptance checklist (must pass before commit)**
- `npm run dev` opens `/` with full scroll experience.
- Navbar links scroll to correct anchors.
- “Try the Editor” button still routes to `/editor`.
- `/editor` and `/sign-in` remain external pages.
- `git status` clean; all lints/pre-commit hooks succeed.

(*EditorNewProfessional.tsx currently renders `/editor` – leave untouched.*)

---

## Deliverables
- Refactored `pages/Index.tsx` containing all sections.
- Updated navigation component (active-link logic).
- Adjusted routes in `App.tsx`.
- Any CSS/utility tweaks to ensure smooth scrolling & mobile friendliness.
- **One** clean commit with a concise message, e.g.  
`feat: merge marketing pages into single-scroll landing + nav scroll-spy`.

Good luck — ship it! 🚀
```
